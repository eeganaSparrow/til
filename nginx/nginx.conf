# userディレクティブはデフォルトでnobody。ワーカプロセスの実行ユーザを指定する。
# user  nobody;
# プロセスの数を設定。基本的にはCPUのコア数と同じ数が良い。autoで自動設定。
worker_processes  1;
# エラーログの出力先を指定
error_log /opt/homebrew/var/log/nginx/error.log;
# pidの出力先を指定
pid /opt/homebrew/var/run/nginx.pid;

# イベント駆動関連の設定
events {
    # ワーカが処理するコネクション数。コネクション数というのがどういうものかは分からない。
    worker_connections  1024;
}

# HTTPサーバの設定
http {
    # includeで分割した設定ファイルの読み込み。ここではmime.typeを読み込んでいる。
    include       mime.types;
    default_type  application/octet-stream;
    # ログのフォーマットを指定
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';
    # アクセスログの出力先を指定。第二パラメータのmainはフォーマットで指定したもの。
    access_log  /opt/homebrew/var/log/nginx/access.log  main;

    # 以下４つはパフォーマンスに関する設定
    # sendfile()というシステムコールを使う設定。これにより、ファイル送信の効率が良くなる。
    sendfile        on;
    # キャッシュの設定。最大数と有効期限を指定。
    open_file_cache max=1000 inactive=60s;
    # 大きいパケットサイズで送るから、パケット数を小さくできるような設定
    tcp_nopush     on;
    # 常時接続のタイムアウト時間
    keepalive_timeout  65;

    # バーチャルサーバの設定。nginxではバーチャルサーバとしてサーバを設定するので、仮想的に複数のサーバを作れる。
    server {
        # ポート番号の指定。アドレスの指定も行える。 アドレス:ポート　　という記述
        listen       8080;
        # ホスト名の指定
        server_name  localhost;
        # 公開するディレクトリの指定
        root html;
        index index.html index.htm;
        # 応答ファイルがないときに、エラーログを出すかどうかの設定
        log_not_found off;
    }
}   
